require 'nokogiri'

COLLECTIONS_DIR = File.join(RAILS_ROOT, 'collections')

def saxon_transform(xsl, source, destination)
  cmds = ["cd #{RAILS_ROOT}/lib/saxonb9-1-0-6j"]
  cmds << "java -jar saxon9.jar -o #{destination} #{source} #{xsl}"
  system cmds.join(' && ')
end

def process_swinburne(copy_name, base_solr_doc)
  base_path = File.join(COLLECTIONS_DIR)
  rel_path = File.join('swinburne', 'source', "tei-swinburne3#{copy_name}.xml")
  source = File.join(base_path, rel_path)
  doc = Nokogiri::XML(File.read(source))
  solr_docs = []
  doc.search('//text').each_with_index do |text,index|
    solr_doc = base_solr_doc.dup
    # the xpath
    solr_doc[:identifier_s] = text.path
    # the file path to the source doc
    solr_doc[:source_path_s] = rel_path
    # section title
    solr_doc[:section_title_t] = text.at('body/head').text
    
    # go through each lg element
    text.search('lg').each_with_index do |lg,index2|
      sd = solr_doc.dup
      sd[:id] = "#{sd[:id]}-#{index}-#{index2}"
      puts "indexing #{sd[:id]}"
      sd[:text_t] = text.text
      solr_docs << sd
    end
    
  end
  solr_docs
end

namespace :swinburne do
  
  task :index=>:environment do
    docs = []
    ['', '-CW', '-HR', '-MC', '-MU', '-NY'].each do |copy|
      title = "Poems and Ballads#{copy.empty? ? '' : '; ' + copy.gsub(/^-/,'')}"
      base_doc = {
        :id => "swinburne#{copy}",
        :copy_name_t => copy,
        :collection_id => 'swinburne',
        :collection_title=>'Swinburne',
        :title => title,
        :author_t => 'Algernon Charles Swinburne'
      }
      docs += process_swinburne(copy, base_doc)
    end
    puts "solr doc creation done!"
    puts "deleting existing collection docs..."
    RSOLR.delete_by_query('collection_id:"swinburne"')
    RSOLR.commit
    
    puts "adding new..."
    RSOLR.add docs
    puts "committing..."
    RSOLR.commit
    RSOLR.optimize
    puts 'DONE!'
  end
  
end